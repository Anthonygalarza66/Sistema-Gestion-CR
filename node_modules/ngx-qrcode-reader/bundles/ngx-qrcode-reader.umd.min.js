!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core")):"function"==typeof define&&define.amd?define("ngx-qrcode-reader",["exports","@angular/core"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self)["ngx-qrcode-reader"]={},e.ng.core)}(this,(function(e,t){"use strict";var r=function(){};r.ɵprov=t.ɵɵdefineInjectable({factory:function(){return new r},token:r,providedIn:"root"}),r.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],r.ctorParameters=function(){return[]};Object.create;function n(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")}Object.create;var o=require("qrcode-reader").default,i=function(){function e(e){this.renderer=e,this.cssClass="qrcode-reader",this.showQRCode=!0,this.fileValue="",this.qrContentResult=new t.EventEmitter,this.qrReader=new o}return e.prototype.ngOnInit=function(){var e=this;this.qrReader.callback=function(t,r){if(t)return e.qrContentResult.emit({error:t}),void console.error(t);e.qrContentResult.emit({content:r.result,type:"text"})}},e.prototype.ngOnChanges=function(){this.decode(this.fileValue),this.showQRCode&&this.render()},e.prototype.decode=function(e){this.qrReader.decode(e)},e.prototype.render=function(){var e;(e=this.renderer.createElement("img")).setAttribute("src",this.fileValue),this.renderElement(e)},e.prototype.renderElement=function(e){var t,r;try{for(var o=n(this.qrCodeElement.nativeElement.childNodes),i=o.next();!i.done;i=o.next()){var s=i.value;this.renderer.removeChild(this.qrCodeElement.nativeElement,s)}}catch(e){t={error:e}}finally{try{i&&!i.done&&(r=o.return)&&r.call(o)}finally{if(t)throw t.error}}this.renderer.appendChild(this.qrCodeElement.nativeElement,e)},e}();i.decorators=[{type:t.Component,args:[{selector:"ngx-qrcode-reader",template:'<div #qrCodeElement [class]="cssClass"></div>'}]}],i.ctorParameters=function(){return[{type:t.Renderer2}]},i.propDecorators={cssClass:[{type:t.Input,args:["qrClass"]}],showQRCode:[{type:t.Input,args:["showQr"]}],fileValue:[{type:t.Input,args:["qrFile"]}],qrCodeElement:[{type:t.ViewChild,args:["qrCodeElement",{static:!0}]}],qrContentResult:[{type:t.Output,args:["onfetchQRContent"]}]};var s=function(){};s.decorators=[{type:t.NgModule,args:[{declarations:[i],imports:[],exports:[i]}]}],e.NgxQrcodeReaderComponent=i,e.NgxQrcodeReaderModule=s,e.NgxQrcodeReaderService=r,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=ngx-qrcode-reader.umd.min.js.map